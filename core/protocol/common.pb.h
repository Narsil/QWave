// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class ProtocolWaveletDelta;
class ProtocolHashedVersion;
class ProtocolWaveletOperation;
class ProtocolWaveletOperation_MutateDocument;
class ProtocolDocumentOperation;
class ProtocolDocumentOperation_Component;
class ProtocolDocumentOperation_Component_KeyValuePair;
class ProtocolDocumentOperation_Component_KeyValueUpdate;
class ProtocolDocumentOperation_Component_ElementStart;
class ProtocolDocumentOperation_Component_ReplaceAttributes;
class ProtocolDocumentOperation_Component_UpdateAttributes;
class ProtocolDocumentOperation_Component_AnnotationBoundary;
class ProtocolAppliedWaveletDelta;
class ProtocolSignedDelta;
class ProtocolSignature;
class ProtocolSignerInfo;

enum ProtocolSignature_SignatureAlgorithm {
  ProtocolSignature_SignatureAlgorithm_SHA1_RSA = 1
};
bool ProtocolSignature_SignatureAlgorithm_IsValid(int value);
const ProtocolSignature_SignatureAlgorithm ProtocolSignature_SignatureAlgorithm_SignatureAlgorithm_MIN = ProtocolSignature_SignatureAlgorithm_SHA1_RSA;
const ProtocolSignature_SignatureAlgorithm ProtocolSignature_SignatureAlgorithm_SignatureAlgorithm_MAX = ProtocolSignature_SignatureAlgorithm_SHA1_RSA;

const ::google::protobuf::EnumDescriptor* ProtocolSignature_SignatureAlgorithm_descriptor();
inline const ::std::string& ProtocolSignature_SignatureAlgorithm_Name(ProtocolSignature_SignatureAlgorithm value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtocolSignature_SignatureAlgorithm_descriptor(), value);
}
inline bool ProtocolSignature_SignatureAlgorithm_Parse(
    const ::std::string& name, ProtocolSignature_SignatureAlgorithm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtocolSignature_SignatureAlgorithm>(
    ProtocolSignature_SignatureAlgorithm_descriptor(), name, value);
}
enum ProtocolSignerInfo_HashAlgorithm {
  ProtocolSignerInfo_HashAlgorithm_SHA256 = 1,
  ProtocolSignerInfo_HashAlgorithm_SHA512 = 2
};
bool ProtocolSignerInfo_HashAlgorithm_IsValid(int value);
const ProtocolSignerInfo_HashAlgorithm ProtocolSignerInfo_HashAlgorithm_HashAlgorithm_MIN = ProtocolSignerInfo_HashAlgorithm_SHA256;
const ProtocolSignerInfo_HashAlgorithm ProtocolSignerInfo_HashAlgorithm_HashAlgorithm_MAX = ProtocolSignerInfo_HashAlgorithm_SHA512;

const ::google::protobuf::EnumDescriptor* ProtocolSignerInfo_HashAlgorithm_descriptor();
inline const ::std::string& ProtocolSignerInfo_HashAlgorithm_Name(ProtocolSignerInfo_HashAlgorithm value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtocolSignerInfo_HashAlgorithm_descriptor(), value);
}
inline bool ProtocolSignerInfo_HashAlgorithm_Parse(
    const ::std::string& name, ProtocolSignerInfo_HashAlgorithm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtocolSignerInfo_HashAlgorithm>(
    ProtocolSignerInfo_HashAlgorithm_descriptor(), name, value);
}
// ===================================================================

class ProtocolWaveletDelta : public ::google::protobuf::Message {
 public:
  ProtocolWaveletDelta();
  virtual ~ProtocolWaveletDelta();
  
  ProtocolWaveletDelta(const ProtocolWaveletDelta& from);
  
  inline ProtocolWaveletDelta& operator=(const ProtocolWaveletDelta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolWaveletDelta& default_instance();
  void Swap(ProtocolWaveletDelta* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolWaveletDelta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolWaveletDelta& from);
  void MergeFrom(const ProtocolWaveletDelta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .protocol.ProtocolHashedVersion hashed_version = 1;
  inline bool has_hashed_version() const;
  inline void clear_hashed_version();
  static const int kHashedVersionFieldNumber = 1;
  inline const ::protocol::ProtocolHashedVersion& hashed_version() const;
  inline ::protocol::ProtocolHashedVersion* mutable_hashed_version();
  
  // required string author = 2;
  inline bool has_author() const;
  inline void clear_author();
  static const int kAuthorFieldNumber = 2;
  inline const ::std::string& author() const;
  inline void set_author(const ::std::string& value);
  inline void set_author(const char* value);
  inline void set_author(const char* value, size_t size);
  inline ::std::string* mutable_author();
  
  // repeated .protocol.ProtocolWaveletOperation operation = 3;
  inline int operation_size() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolWaveletOperation >& operation() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolWaveletOperation >* mutable_operation();
  inline const ::protocol::ProtocolWaveletOperation& operation(int index) const;
  inline ::protocol::ProtocolWaveletOperation* mutable_operation(int index);
  inline ::protocol::ProtocolWaveletOperation* add_operation();
  
  // repeated string address_path = 4;
  inline int address_path_size() const;
  inline void clear_address_path();
  static const int kAddressPathFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& address_path() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_address_path();
  inline const ::std::string& address_path(int index) const;
  inline ::std::string* mutable_address_path(int index);
  inline void set_address_path(int index, const ::std::string& value);
  inline void set_address_path(int index, const char* value);
  inline void set_address_path(int index, const char* value, size_t size);
  inline ::std::string* add_address_path();
  inline void add_address_path(const ::std::string& value);
  inline void add_address_path(const char* value);
  inline void add_address_path(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::protocol::ProtocolHashedVersion* hashed_version_;
  ::std::string* author_;
  static const ::std::string _default_author_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolWaveletOperation > operation_;
  ::google::protobuf::RepeatedPtrField< ::std::string> address_path_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolWaveletDelta* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolHashedVersion : public ::google::protobuf::Message {
 public:
  ProtocolHashedVersion();
  virtual ~ProtocolHashedVersion();
  
  ProtocolHashedVersion(const ProtocolHashedVersion& from);
  
  inline ProtocolHashedVersion& operator=(const ProtocolHashedVersion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolHashedVersion& default_instance();
  void Swap(ProtocolHashedVersion* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolHashedVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolHashedVersion& from);
  void MergeFrom(const ProtocolHashedVersion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int64 version() const;
  inline void set_version(::google::protobuf::int64 value);
  
  // required bytes history_hash = 2;
  inline bool has_history_hash() const;
  inline void clear_history_hash();
  static const int kHistoryHashFieldNumber = 2;
  inline const ::std::string& history_hash() const;
  inline void set_history_hash(const ::std::string& value);
  inline void set_history_hash(const char* value);
  inline void set_history_hash(const void* value, size_t size);
  inline ::std::string* mutable_history_hash();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 version_;
  ::std::string* history_hash_;
  static const ::std::string _default_history_hash_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolHashedVersion* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolWaveletOperation_MutateDocument : public ::google::protobuf::Message {
 public:
  ProtocolWaveletOperation_MutateDocument();
  virtual ~ProtocolWaveletOperation_MutateDocument();
  
  ProtocolWaveletOperation_MutateDocument(const ProtocolWaveletOperation_MutateDocument& from);
  
  inline ProtocolWaveletOperation_MutateDocument& operator=(const ProtocolWaveletOperation_MutateDocument& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolWaveletOperation_MutateDocument& default_instance();
  void Swap(ProtocolWaveletOperation_MutateDocument* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolWaveletOperation_MutateDocument* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolWaveletOperation_MutateDocument& from);
  void MergeFrom(const ProtocolWaveletOperation_MutateDocument& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string document_id = 1;
  inline bool has_document_id() const;
  inline void clear_document_id();
  static const int kDocumentIdFieldNumber = 1;
  inline const ::std::string& document_id() const;
  inline void set_document_id(const ::std::string& value);
  inline void set_document_id(const char* value);
  inline void set_document_id(const char* value, size_t size);
  inline ::std::string* mutable_document_id();
  
  // required .protocol.ProtocolDocumentOperation document_operation = 2;
  inline bool has_document_operation() const;
  inline void clear_document_operation();
  static const int kDocumentOperationFieldNumber = 2;
  inline const ::protocol::ProtocolDocumentOperation& document_operation() const;
  inline ::protocol::ProtocolDocumentOperation* mutable_document_operation();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* document_id_;
  static const ::std::string _default_document_id_;
  ::protocol::ProtocolDocumentOperation* document_operation_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolWaveletOperation_MutateDocument* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolWaveletOperation : public ::google::protobuf::Message {
 public:
  ProtocolWaveletOperation();
  virtual ~ProtocolWaveletOperation();
  
  ProtocolWaveletOperation(const ProtocolWaveletOperation& from);
  
  inline ProtocolWaveletOperation& operator=(const ProtocolWaveletOperation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolWaveletOperation& default_instance();
  void Swap(ProtocolWaveletOperation* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolWaveletOperation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolWaveletOperation& from);
  void MergeFrom(const ProtocolWaveletOperation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtocolWaveletOperation_MutateDocument MutateDocument;
  
  // accessors -------------------------------------------------------
  
  // optional string add_participant = 1;
  inline bool has_add_participant() const;
  inline void clear_add_participant();
  static const int kAddParticipantFieldNumber = 1;
  inline const ::std::string& add_participant() const;
  inline void set_add_participant(const ::std::string& value);
  inline void set_add_participant(const char* value);
  inline void set_add_participant(const char* value, size_t size);
  inline ::std::string* mutable_add_participant();
  
  // optional string remove_participant = 2;
  inline bool has_remove_participant() const;
  inline void clear_remove_participant();
  static const int kRemoveParticipantFieldNumber = 2;
  inline const ::std::string& remove_participant() const;
  inline void set_remove_participant(const ::std::string& value);
  inline void set_remove_participant(const char* value);
  inline void set_remove_participant(const char* value, size_t size);
  inline ::std::string* mutable_remove_participant();
  
  // optional .protocol.ProtocolWaveletOperation.MutateDocument mutate_document = 3;
  inline bool has_mutate_document() const;
  inline void clear_mutate_document();
  static const int kMutateDocumentFieldNumber = 3;
  inline const ::protocol::ProtocolWaveletOperation_MutateDocument& mutate_document() const;
  inline ::protocol::ProtocolWaveletOperation_MutateDocument* mutable_mutate_document();
  
  // optional bool no_op = 4;
  inline bool has_no_op() const;
  inline void clear_no_op();
  static const int kNoOpFieldNumber = 4;
  inline bool no_op() const;
  inline void set_no_op(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* add_participant_;
  static const ::std::string _default_add_participant_;
  ::std::string* remove_participant_;
  static const ::std::string _default_remove_participant_;
  ::protocol::ProtocolWaveletOperation_MutateDocument* mutate_document_;
  bool no_op_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolWaveletOperation* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component_KeyValuePair : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component_KeyValuePair();
  virtual ~ProtocolDocumentOperation_Component_KeyValuePair();
  
  ProtocolDocumentOperation_Component_KeyValuePair(const ProtocolDocumentOperation_Component_KeyValuePair& from);
  
  inline ProtocolDocumentOperation_Component_KeyValuePair& operator=(const ProtocolDocumentOperation_Component_KeyValuePair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component_KeyValuePair& default_instance();
  void Swap(ProtocolDocumentOperation_Component_KeyValuePair* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component_KeyValuePair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component_KeyValuePair& from);
  void MergeFrom(const ProtocolDocumentOperation_Component_KeyValuePair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* key_;
  static const ::std::string _default_key_;
  ::std::string* value_;
  static const ::std::string _default_value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component_KeyValuePair* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component_KeyValueUpdate : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component_KeyValueUpdate();
  virtual ~ProtocolDocumentOperation_Component_KeyValueUpdate();
  
  ProtocolDocumentOperation_Component_KeyValueUpdate(const ProtocolDocumentOperation_Component_KeyValueUpdate& from);
  
  inline ProtocolDocumentOperation_Component_KeyValueUpdate& operator=(const ProtocolDocumentOperation_Component_KeyValueUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component_KeyValueUpdate& default_instance();
  void Swap(ProtocolDocumentOperation_Component_KeyValueUpdate* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component_KeyValueUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component_KeyValueUpdate& from);
  void MergeFrom(const ProtocolDocumentOperation_Component_KeyValueUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  
  // optional string old_value = 2;
  inline bool has_old_value() const;
  inline void clear_old_value();
  static const int kOldValueFieldNumber = 2;
  inline const ::std::string& old_value() const;
  inline void set_old_value(const ::std::string& value);
  inline void set_old_value(const char* value);
  inline void set_old_value(const char* value, size_t size);
  inline ::std::string* mutable_old_value();
  
  // optional string new_value = 3;
  inline bool has_new_value() const;
  inline void clear_new_value();
  static const int kNewValueFieldNumber = 3;
  inline const ::std::string& new_value() const;
  inline void set_new_value(const ::std::string& value);
  inline void set_new_value(const char* value);
  inline void set_new_value(const char* value, size_t size);
  inline ::std::string* mutable_new_value();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* key_;
  static const ::std::string _default_key_;
  ::std::string* old_value_;
  static const ::std::string _default_old_value_;
  ::std::string* new_value_;
  static const ::std::string _default_new_value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component_KeyValueUpdate* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component_ElementStart : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component_ElementStart();
  virtual ~ProtocolDocumentOperation_Component_ElementStart();
  
  ProtocolDocumentOperation_Component_ElementStart(const ProtocolDocumentOperation_Component_ElementStart& from);
  
  inline ProtocolDocumentOperation_Component_ElementStart& operator=(const ProtocolDocumentOperation_Component_ElementStart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component_ElementStart& default_instance();
  void Swap(ProtocolDocumentOperation_Component_ElementStart* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component_ElementStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component_ElementStart& from);
  void MergeFrom(const ProtocolDocumentOperation_Component_ElementStart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // repeated .protocol.ProtocolDocumentOperation.Component.KeyValuePair attribute = 2;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >& attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >* mutable_attribute();
  inline const ::protocol::ProtocolDocumentOperation_Component_KeyValuePair& attribute(int index) const;
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* mutable_attribute(int index);
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* add_attribute();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair > attribute_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component_ElementStart* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component_ReplaceAttributes : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component_ReplaceAttributes();
  virtual ~ProtocolDocumentOperation_Component_ReplaceAttributes();
  
  ProtocolDocumentOperation_Component_ReplaceAttributes(const ProtocolDocumentOperation_Component_ReplaceAttributes& from);
  
  inline ProtocolDocumentOperation_Component_ReplaceAttributes& operator=(const ProtocolDocumentOperation_Component_ReplaceAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component_ReplaceAttributes& default_instance();
  void Swap(ProtocolDocumentOperation_Component_ReplaceAttributes* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component_ReplaceAttributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component_ReplaceAttributes& from);
  void MergeFrom(const ProtocolDocumentOperation_Component_ReplaceAttributes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool empty = 1;
  inline bool has_empty() const;
  inline void clear_empty();
  static const int kEmptyFieldNumber = 1;
  inline bool empty() const;
  inline void set_empty(bool value);
  
  // repeated .protocol.ProtocolDocumentOperation.Component.KeyValuePair old_attribute = 2;
  inline int old_attribute_size() const;
  inline void clear_old_attribute();
  static const int kOldAttributeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >& old_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >* mutable_old_attribute();
  inline const ::protocol::ProtocolDocumentOperation_Component_KeyValuePair& old_attribute(int index) const;
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* mutable_old_attribute(int index);
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* add_old_attribute();
  
  // repeated .protocol.ProtocolDocumentOperation.Component.KeyValuePair new_attribute = 3;
  inline int new_attribute_size() const;
  inline void clear_new_attribute();
  static const int kNewAttributeFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >& new_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >* mutable_new_attribute();
  inline const ::protocol::ProtocolDocumentOperation_Component_KeyValuePair& new_attribute(int index) const;
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* mutable_new_attribute(int index);
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* add_new_attribute();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool empty_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair > old_attribute_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair > new_attribute_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component_ReplaceAttributes* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component_UpdateAttributes : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component_UpdateAttributes();
  virtual ~ProtocolDocumentOperation_Component_UpdateAttributes();
  
  ProtocolDocumentOperation_Component_UpdateAttributes(const ProtocolDocumentOperation_Component_UpdateAttributes& from);
  
  inline ProtocolDocumentOperation_Component_UpdateAttributes& operator=(const ProtocolDocumentOperation_Component_UpdateAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component_UpdateAttributes& default_instance();
  void Swap(ProtocolDocumentOperation_Component_UpdateAttributes* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component_UpdateAttributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component_UpdateAttributes& from);
  void MergeFrom(const ProtocolDocumentOperation_Component_UpdateAttributes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool empty = 1;
  inline bool has_empty() const;
  inline void clear_empty();
  static const int kEmptyFieldNumber = 1;
  inline bool empty() const;
  inline void set_empty(bool value);
  
  // repeated .protocol.ProtocolDocumentOperation.Component.KeyValueUpdate attribute_update = 2;
  inline int attribute_update_size() const;
  inline void clear_attribute_update();
  static const int kAttributeUpdateFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >& attribute_update() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >* mutable_attribute_update();
  inline const ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate& attribute_update(int index) const;
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* mutable_attribute_update(int index);
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* add_attribute_update();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool empty_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate > attribute_update_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component_UpdateAttributes* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component_AnnotationBoundary : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component_AnnotationBoundary();
  virtual ~ProtocolDocumentOperation_Component_AnnotationBoundary();
  
  ProtocolDocumentOperation_Component_AnnotationBoundary(const ProtocolDocumentOperation_Component_AnnotationBoundary& from);
  
  inline ProtocolDocumentOperation_Component_AnnotationBoundary& operator=(const ProtocolDocumentOperation_Component_AnnotationBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component_AnnotationBoundary& default_instance();
  void Swap(ProtocolDocumentOperation_Component_AnnotationBoundary* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component_AnnotationBoundary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component_AnnotationBoundary& from);
  void MergeFrom(const ProtocolDocumentOperation_Component_AnnotationBoundary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool empty = 1;
  inline bool has_empty() const;
  inline void clear_empty();
  static const int kEmptyFieldNumber = 1;
  inline bool empty() const;
  inline void set_empty(bool value);
  
  // repeated string end = 2;
  inline int end_size() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& end() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_end();
  inline const ::std::string& end(int index) const;
  inline ::std::string* mutable_end(int index);
  inline void set_end(int index, const ::std::string& value);
  inline void set_end(int index, const char* value);
  inline void set_end(int index, const char* value, size_t size);
  inline ::std::string* add_end();
  inline void add_end(const ::std::string& value);
  inline void add_end(const char* value);
  inline void add_end(const char* value, size_t size);
  
  // repeated .protocol.ProtocolDocumentOperation.Component.KeyValueUpdate change = 3;
  inline int change_size() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >& change() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >* mutable_change();
  inline const ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate& change(int index) const;
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* mutable_change(int index);
  inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* add_change();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool empty_;
  ::google::protobuf::RepeatedPtrField< ::std::string> end_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate > change_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component_AnnotationBoundary* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation_Component : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation_Component();
  virtual ~ProtocolDocumentOperation_Component();
  
  ProtocolDocumentOperation_Component(const ProtocolDocumentOperation_Component& from);
  
  inline ProtocolDocumentOperation_Component& operator=(const ProtocolDocumentOperation_Component& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation_Component& default_instance();
  void Swap(ProtocolDocumentOperation_Component* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation_Component* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation_Component& from);
  void MergeFrom(const ProtocolDocumentOperation_Component& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtocolDocumentOperation_Component_KeyValuePair KeyValuePair;
  typedef ProtocolDocumentOperation_Component_KeyValueUpdate KeyValueUpdate;
  typedef ProtocolDocumentOperation_Component_ElementStart ElementStart;
  typedef ProtocolDocumentOperation_Component_ReplaceAttributes ReplaceAttributes;
  typedef ProtocolDocumentOperation_Component_UpdateAttributes UpdateAttributes;
  typedef ProtocolDocumentOperation_Component_AnnotationBoundary AnnotationBoundary;
  
  // accessors -------------------------------------------------------
  
  // optional .protocol.ProtocolDocumentOperation.Component.AnnotationBoundary annotation_boundary = 1;
  inline bool has_annotation_boundary() const;
  inline void clear_annotation_boundary();
  static const int kAnnotationBoundaryFieldNumber = 1;
  inline const ::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary& annotation_boundary() const;
  inline ::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary* mutable_annotation_boundary();
  
  // optional string characters = 2;
  inline bool has_characters() const;
  inline void clear_characters();
  static const int kCharactersFieldNumber = 2;
  inline const ::std::string& characters() const;
  inline void set_characters(const ::std::string& value);
  inline void set_characters(const char* value);
  inline void set_characters(const char* value, size_t size);
  inline ::std::string* mutable_characters();
  
  // optional .protocol.ProtocolDocumentOperation.Component.ElementStart element_start = 3;
  inline bool has_element_start() const;
  inline void clear_element_start();
  static const int kElementStartFieldNumber = 3;
  inline const ::protocol::ProtocolDocumentOperation_Component_ElementStart& element_start() const;
  inline ::protocol::ProtocolDocumentOperation_Component_ElementStart* mutable_element_start();
  
  // optional bool element_end = 4;
  inline bool has_element_end() const;
  inline void clear_element_end();
  static const int kElementEndFieldNumber = 4;
  inline bool element_end() const;
  inline void set_element_end(bool value);
  
  // optional int32 retain_item_count = 5;
  inline bool has_retain_item_count() const;
  inline void clear_retain_item_count();
  static const int kRetainItemCountFieldNumber = 5;
  inline ::google::protobuf::int32 retain_item_count() const;
  inline void set_retain_item_count(::google::protobuf::int32 value);
  
  // optional string delete_characters = 6;
  inline bool has_delete_characters() const;
  inline void clear_delete_characters();
  static const int kDeleteCharactersFieldNumber = 6;
  inline const ::std::string& delete_characters() const;
  inline void set_delete_characters(const ::std::string& value);
  inline void set_delete_characters(const char* value);
  inline void set_delete_characters(const char* value, size_t size);
  inline ::std::string* mutable_delete_characters();
  
  // optional .protocol.ProtocolDocumentOperation.Component.ElementStart delete_element_start = 7;
  inline bool has_delete_element_start() const;
  inline void clear_delete_element_start();
  static const int kDeleteElementStartFieldNumber = 7;
  inline const ::protocol::ProtocolDocumentOperation_Component_ElementStart& delete_element_start() const;
  inline ::protocol::ProtocolDocumentOperation_Component_ElementStart* mutable_delete_element_start();
  
  // optional bool delete_element_end = 8;
  inline bool has_delete_element_end() const;
  inline void clear_delete_element_end();
  static const int kDeleteElementEndFieldNumber = 8;
  inline bool delete_element_end() const;
  inline void set_delete_element_end(bool value);
  
  // optional .protocol.ProtocolDocumentOperation.Component.ReplaceAttributes replace_attributes = 9;
  inline bool has_replace_attributes() const;
  inline void clear_replace_attributes();
  static const int kReplaceAttributesFieldNumber = 9;
  inline const ::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes& replace_attributes() const;
  inline ::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes* mutable_replace_attributes();
  
  // optional .protocol.ProtocolDocumentOperation.Component.UpdateAttributes update_attributes = 10;
  inline bool has_update_attributes() const;
  inline void clear_update_attributes();
  static const int kUpdateAttributesFieldNumber = 10;
  inline const ::protocol::ProtocolDocumentOperation_Component_UpdateAttributes& update_attributes() const;
  inline ::protocol::ProtocolDocumentOperation_Component_UpdateAttributes* mutable_update_attributes();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary* annotation_boundary_;
  ::std::string* characters_;
  static const ::std::string _default_characters_;
  ::protocol::ProtocolDocumentOperation_Component_ElementStart* element_start_;
  bool element_end_;
  ::google::protobuf::int32 retain_item_count_;
  ::std::string* delete_characters_;
  static const ::std::string _default_delete_characters_;
  ::protocol::ProtocolDocumentOperation_Component_ElementStart* delete_element_start_;
  bool delete_element_end_;
  ::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes* replace_attributes_;
  ::protocol::ProtocolDocumentOperation_Component_UpdateAttributes* update_attributes_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation_Component* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolDocumentOperation : public ::google::protobuf::Message {
 public:
  ProtocolDocumentOperation();
  virtual ~ProtocolDocumentOperation();
  
  ProtocolDocumentOperation(const ProtocolDocumentOperation& from);
  
  inline ProtocolDocumentOperation& operator=(const ProtocolDocumentOperation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolDocumentOperation& default_instance();
  void Swap(ProtocolDocumentOperation* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolDocumentOperation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolDocumentOperation& from);
  void MergeFrom(const ProtocolDocumentOperation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtocolDocumentOperation_Component Component;
  
  // accessors -------------------------------------------------------
  
  // repeated .protocol.ProtocolDocumentOperation.Component component = 1;
  inline int component_size() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component >& component() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component >* mutable_component();
  inline const ::protocol::ProtocolDocumentOperation_Component& component(int index) const;
  inline ::protocol::ProtocolDocumentOperation_Component* mutable_component(int index);
  inline ::protocol::ProtocolDocumentOperation_Component* add_component();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component > component_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolDocumentOperation* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolAppliedWaveletDelta : public ::google::protobuf::Message {
 public:
  ProtocolAppliedWaveletDelta();
  virtual ~ProtocolAppliedWaveletDelta();
  
  ProtocolAppliedWaveletDelta(const ProtocolAppliedWaveletDelta& from);
  
  inline ProtocolAppliedWaveletDelta& operator=(const ProtocolAppliedWaveletDelta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolAppliedWaveletDelta& default_instance();
  void Swap(ProtocolAppliedWaveletDelta* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolAppliedWaveletDelta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolAppliedWaveletDelta& from);
  void MergeFrom(const ProtocolAppliedWaveletDelta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .protocol.ProtocolSignedDelta signed_original_delta = 1;
  inline bool has_signed_original_delta() const;
  inline void clear_signed_original_delta();
  static const int kSignedOriginalDeltaFieldNumber = 1;
  inline const ::protocol::ProtocolSignedDelta& signed_original_delta() const;
  inline ::protocol::ProtocolSignedDelta* mutable_signed_original_delta();
  
  // optional .protocol.ProtocolHashedVersion hashed_version_applied_at = 2;
  inline bool has_hashed_version_applied_at() const;
  inline void clear_hashed_version_applied_at();
  static const int kHashedVersionAppliedAtFieldNumber = 2;
  inline const ::protocol::ProtocolHashedVersion& hashed_version_applied_at() const;
  inline ::protocol::ProtocolHashedVersion* mutable_hashed_version_applied_at();
  
  // required int32 operations_applied = 3;
  inline bool has_operations_applied() const;
  inline void clear_operations_applied();
  static const int kOperationsAppliedFieldNumber = 3;
  inline ::google::protobuf::int32 operations_applied() const;
  inline void set_operations_applied(::google::protobuf::int32 value);
  
  // required int64 application_timestamp = 4;
  inline bool has_application_timestamp() const;
  inline void clear_application_timestamp();
  static const int kApplicationTimestampFieldNumber = 4;
  inline ::google::protobuf::int64 application_timestamp() const;
  inline void set_application_timestamp(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::protocol::ProtocolSignedDelta* signed_original_delta_;
  ::protocol::ProtocolHashedVersion* hashed_version_applied_at_;
  ::google::protobuf::int32 operations_applied_;
  ::google::protobuf::int64 application_timestamp_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolAppliedWaveletDelta* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolSignedDelta : public ::google::protobuf::Message {
 public:
  ProtocolSignedDelta();
  virtual ~ProtocolSignedDelta();
  
  ProtocolSignedDelta(const ProtocolSignedDelta& from);
  
  inline ProtocolSignedDelta& operator=(const ProtocolSignedDelta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolSignedDelta& default_instance();
  void Swap(ProtocolSignedDelta* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolSignedDelta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolSignedDelta& from);
  void MergeFrom(const ProtocolSignedDelta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes delta = 1;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 1;
  inline const ::std::string& delta() const;
  inline void set_delta(const ::std::string& value);
  inline void set_delta(const char* value);
  inline void set_delta(const void* value, size_t size);
  inline ::std::string* mutable_delta();
  
  // repeated .protocol.ProtocolSignature signature = 2;
  inline int signature_size() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolSignature >& signature() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolSignature >* mutable_signature();
  inline const ::protocol::ProtocolSignature& signature(int index) const;
  inline ::protocol::ProtocolSignature* mutable_signature(int index);
  inline ::protocol::ProtocolSignature* add_signature();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* delta_;
  static const ::std::string _default_delta_;
  ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolSignature > signature_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolSignedDelta* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolSignature : public ::google::protobuf::Message {
 public:
  ProtocolSignature();
  virtual ~ProtocolSignature();
  
  ProtocolSignature(const ProtocolSignature& from);
  
  inline ProtocolSignature& operator=(const ProtocolSignature& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolSignature& default_instance();
  void Swap(ProtocolSignature* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolSignature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolSignature& from);
  void MergeFrom(const ProtocolSignature& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtocolSignature_SignatureAlgorithm SignatureAlgorithm;
  static const SignatureAlgorithm SHA1_RSA = ProtocolSignature_SignatureAlgorithm_SHA1_RSA;
  static inline bool SignatureAlgorithm_IsValid(int value) {
    return ProtocolSignature_SignatureAlgorithm_IsValid(value);
  }
  static const SignatureAlgorithm SignatureAlgorithm_MIN =
    ProtocolSignature_SignatureAlgorithm_SignatureAlgorithm_MIN;
  static const SignatureAlgorithm SignatureAlgorithm_MAX =
    ProtocolSignature_SignatureAlgorithm_SignatureAlgorithm_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  SignatureAlgorithm_descriptor() {
    return ProtocolSignature_SignatureAlgorithm_descriptor();
  }
  static inline const ::std::string& SignatureAlgorithm_Name(SignatureAlgorithm value) {
    return ProtocolSignature_SignatureAlgorithm_Name(value);
  }
  static inline bool SignatureAlgorithm_Parse(const ::std::string& name,
      SignatureAlgorithm* value) {
    return ProtocolSignature_SignatureAlgorithm_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required bytes signature_bytes = 1;
  inline bool has_signature_bytes() const;
  inline void clear_signature_bytes();
  static const int kSignatureBytesFieldNumber = 1;
  inline const ::std::string& signature_bytes() const;
  inline void set_signature_bytes(const ::std::string& value);
  inline void set_signature_bytes(const char* value);
  inline void set_signature_bytes(const void* value, size_t size);
  inline ::std::string* mutable_signature_bytes();
  
  // required bytes signer_id = 2;
  inline bool has_signer_id() const;
  inline void clear_signer_id();
  static const int kSignerIdFieldNumber = 2;
  inline const ::std::string& signer_id() const;
  inline void set_signer_id(const ::std::string& value);
  inline void set_signer_id(const char* value);
  inline void set_signer_id(const void* value, size_t size);
  inline ::std::string* mutable_signer_id();
  
  // required .protocol.ProtocolSignature.SignatureAlgorithm signature_algorithm = 3;
  inline bool has_signature_algorithm() const;
  inline void clear_signature_algorithm();
  static const int kSignatureAlgorithmFieldNumber = 3;
  inline ::protocol::ProtocolSignature_SignatureAlgorithm signature_algorithm() const;
  inline void set_signature_algorithm(::protocol::ProtocolSignature_SignatureAlgorithm value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* signature_bytes_;
  static const ::std::string _default_signature_bytes_;
  ::std::string* signer_id_;
  static const ::std::string _default_signer_id_;
  int signature_algorithm_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolSignature* default_instance_;
};
// -------------------------------------------------------------------

class ProtocolSignerInfo : public ::google::protobuf::Message {
 public:
  ProtocolSignerInfo();
  virtual ~ProtocolSignerInfo();
  
  ProtocolSignerInfo(const ProtocolSignerInfo& from);
  
  inline ProtocolSignerInfo& operator=(const ProtocolSignerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolSignerInfo& default_instance();
  void Swap(ProtocolSignerInfo* other);
  
  // implements Message ----------------------------------------------
  
  ProtocolSignerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolSignerInfo& from);
  void MergeFrom(const ProtocolSignerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtocolSignerInfo_HashAlgorithm HashAlgorithm;
  static const HashAlgorithm SHA256 = ProtocolSignerInfo_HashAlgorithm_SHA256;
  static const HashAlgorithm SHA512 = ProtocolSignerInfo_HashAlgorithm_SHA512;
  static inline bool HashAlgorithm_IsValid(int value) {
    return ProtocolSignerInfo_HashAlgorithm_IsValid(value);
  }
  static const HashAlgorithm HashAlgorithm_MIN =
    ProtocolSignerInfo_HashAlgorithm_HashAlgorithm_MIN;
  static const HashAlgorithm HashAlgorithm_MAX =
    ProtocolSignerInfo_HashAlgorithm_HashAlgorithm_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  HashAlgorithm_descriptor() {
    return ProtocolSignerInfo_HashAlgorithm_descriptor();
  }
  static inline const ::std::string& HashAlgorithm_Name(HashAlgorithm value) {
    return ProtocolSignerInfo_HashAlgorithm_Name(value);
  }
  static inline bool HashAlgorithm_Parse(const ::std::string& name,
      HashAlgorithm* value) {
    return ProtocolSignerInfo_HashAlgorithm_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .protocol.ProtocolSignerInfo.HashAlgorithm hash_algorithm = 1;
  inline bool has_hash_algorithm() const;
  inline void clear_hash_algorithm();
  static const int kHashAlgorithmFieldNumber = 1;
  inline ::protocol::ProtocolSignerInfo_HashAlgorithm hash_algorithm() const;
  inline void set_hash_algorithm(::protocol::ProtocolSignerInfo_HashAlgorithm value);
  
  // required string domain = 2;
  inline bool has_domain() const;
  inline void clear_domain();
  static const int kDomainFieldNumber = 2;
  inline const ::std::string& domain() const;
  inline void set_domain(const ::std::string& value);
  inline void set_domain(const char* value);
  inline void set_domain(const char* value, size_t size);
  inline ::std::string* mutable_domain();
  
  // repeated bytes certificate = 3;
  inline int certificate_size() const;
  inline void clear_certificate();
  static const int kCertificateFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& certificate() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_certificate();
  inline const ::std::string& certificate(int index) const;
  inline ::std::string* mutable_certificate(int index);
  inline void set_certificate(int index, const ::std::string& value);
  inline void set_certificate(int index, const char* value);
  inline void set_certificate(int index, const void* value, size_t size);
  inline ::std::string* add_certificate();
  inline void add_certificate(const ::std::string& value);
  inline void add_certificate(const char* value);
  inline void add_certificate(const void* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int hash_algorithm_;
  ::std::string* domain_;
  static const ::std::string _default_domain_;
  ::google::protobuf::RepeatedPtrField< ::std::string> certificate_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProtocolSignerInfo* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// ProtocolWaveletDelta

// required .protocol.ProtocolHashedVersion hashed_version = 1;
inline bool ProtocolWaveletDelta::has_hashed_version() const {
  return _has_bit(0);
}
inline void ProtocolWaveletDelta::clear_hashed_version() {
  if (hashed_version_ != NULL) hashed_version_->::protocol::ProtocolHashedVersion::Clear();
  _clear_bit(0);
}
inline const ::protocol::ProtocolHashedVersion& ProtocolWaveletDelta::hashed_version() const {
  return hashed_version_ != NULL ? *hashed_version_ : *default_instance_->hashed_version_;
}
inline ::protocol::ProtocolHashedVersion* ProtocolWaveletDelta::mutable_hashed_version() {
  _set_bit(0);
  if (hashed_version_ == NULL) hashed_version_ = new ::protocol::ProtocolHashedVersion;
  return hashed_version_;
}

// required string author = 2;
inline bool ProtocolWaveletDelta::has_author() const {
  return _has_bit(1);
}
inline void ProtocolWaveletDelta::clear_author() {
  if (author_ != &_default_author_) {
    author_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolWaveletDelta::author() const {
  return *author_;
}
inline void ProtocolWaveletDelta::set_author(const ::std::string& value) {
  _set_bit(1);
  if (author_ == &_default_author_) {
    author_ = new ::std::string;
  }
  author_->assign(value);
}
inline void ProtocolWaveletDelta::set_author(const char* value) {
  _set_bit(1);
  if (author_ == &_default_author_) {
    author_ = new ::std::string;
  }
  author_->assign(value);
}
inline void ProtocolWaveletDelta::set_author(const char* value, size_t size) {
  _set_bit(1);
  if (author_ == &_default_author_) {
    author_ = new ::std::string;
  }
  author_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolWaveletDelta::mutable_author() {
  _set_bit(1);
  if (author_ == &_default_author_) {
    author_ = new ::std::string;
  }
  return author_;
}

// repeated .protocol.ProtocolWaveletOperation operation = 3;
inline int ProtocolWaveletDelta::operation_size() const {
  return operation_.size();
}
inline void ProtocolWaveletDelta::clear_operation() {
  operation_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolWaveletOperation >&
ProtocolWaveletDelta::operation() const {
  return operation_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolWaveletOperation >*
ProtocolWaveletDelta::mutable_operation() {
  return &operation_;
}
inline const ::protocol::ProtocolWaveletOperation& ProtocolWaveletDelta::operation(int index) const {
  return operation_.Get(index);
}
inline ::protocol::ProtocolWaveletOperation* ProtocolWaveletDelta::mutable_operation(int index) {
  return operation_.Mutable(index);
}
inline ::protocol::ProtocolWaveletOperation* ProtocolWaveletDelta::add_operation() {
  return operation_.Add();
}

// repeated string address_path = 4;
inline int ProtocolWaveletDelta::address_path_size() const {
  return address_path_.size();
}
inline void ProtocolWaveletDelta::clear_address_path() {
  address_path_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtocolWaveletDelta::address_path() const {
  return address_path_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtocolWaveletDelta::mutable_address_path() {
  return &address_path_;
}
inline const ::std::string& ProtocolWaveletDelta::address_path(int index) const {
  return address_path_.Get(index);
}
inline ::std::string* ProtocolWaveletDelta::mutable_address_path(int index) {
  return address_path_.Mutable(index);
}
inline void ProtocolWaveletDelta::set_address_path(int index, const ::std::string& value) {
  address_path_.Mutable(index)->assign(value);
}
inline void ProtocolWaveletDelta::set_address_path(int index, const char* value) {
  address_path_.Mutable(index)->assign(value);
}
inline void ProtocolWaveletDelta::set_address_path(int index, const char* value, size_t size) {
  address_path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolWaveletDelta::add_address_path() {
  return address_path_.Add();
}
inline void ProtocolWaveletDelta::add_address_path(const ::std::string& value) {
  address_path_.Add()->assign(value);
}
inline void ProtocolWaveletDelta::add_address_path(const char* value) {
  address_path_.Add()->assign(value);
}
inline void ProtocolWaveletDelta::add_address_path(const char* value, size_t size) {
  address_path_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// ProtocolHashedVersion

// required int64 version = 1;
inline bool ProtocolHashedVersion::has_version() const {
  return _has_bit(0);
}
inline void ProtocolHashedVersion::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 ProtocolHashedVersion::version() const {
  return version_;
}
inline void ProtocolHashedVersion::set_version(::google::protobuf::int64 value) {
  _set_bit(0);
  version_ = value;
}

// required bytes history_hash = 2;
inline bool ProtocolHashedVersion::has_history_hash() const {
  return _has_bit(1);
}
inline void ProtocolHashedVersion::clear_history_hash() {
  if (history_hash_ != &_default_history_hash_) {
    history_hash_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolHashedVersion::history_hash() const {
  return *history_hash_;
}
inline void ProtocolHashedVersion::set_history_hash(const ::std::string& value) {
  _set_bit(1);
  if (history_hash_ == &_default_history_hash_) {
    history_hash_ = new ::std::string;
  }
  history_hash_->assign(value);
}
inline void ProtocolHashedVersion::set_history_hash(const char* value) {
  _set_bit(1);
  if (history_hash_ == &_default_history_hash_) {
    history_hash_ = new ::std::string;
  }
  history_hash_->assign(value);
}
inline void ProtocolHashedVersion::set_history_hash(const void* value, size_t size) {
  _set_bit(1);
  if (history_hash_ == &_default_history_hash_) {
    history_hash_ = new ::std::string;
  }
  history_hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolHashedVersion::mutable_history_hash() {
  _set_bit(1);
  if (history_hash_ == &_default_history_hash_) {
    history_hash_ = new ::std::string;
  }
  return history_hash_;
}

// -------------------------------------------------------------------

// ProtocolWaveletOperation_MutateDocument

// required string document_id = 1;
inline bool ProtocolWaveletOperation_MutateDocument::has_document_id() const {
  return _has_bit(0);
}
inline void ProtocolWaveletOperation_MutateDocument::clear_document_id() {
  if (document_id_ != &_default_document_id_) {
    document_id_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolWaveletOperation_MutateDocument::document_id() const {
  return *document_id_;
}
inline void ProtocolWaveletOperation_MutateDocument::set_document_id(const ::std::string& value) {
  _set_bit(0);
  if (document_id_ == &_default_document_id_) {
    document_id_ = new ::std::string;
  }
  document_id_->assign(value);
}
inline void ProtocolWaveletOperation_MutateDocument::set_document_id(const char* value) {
  _set_bit(0);
  if (document_id_ == &_default_document_id_) {
    document_id_ = new ::std::string;
  }
  document_id_->assign(value);
}
inline void ProtocolWaveletOperation_MutateDocument::set_document_id(const char* value, size_t size) {
  _set_bit(0);
  if (document_id_ == &_default_document_id_) {
    document_id_ = new ::std::string;
  }
  document_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolWaveletOperation_MutateDocument::mutable_document_id() {
  _set_bit(0);
  if (document_id_ == &_default_document_id_) {
    document_id_ = new ::std::string;
  }
  return document_id_;
}

// required .protocol.ProtocolDocumentOperation document_operation = 2;
inline bool ProtocolWaveletOperation_MutateDocument::has_document_operation() const {
  return _has_bit(1);
}
inline void ProtocolWaveletOperation_MutateDocument::clear_document_operation() {
  if (document_operation_ != NULL) document_operation_->::protocol::ProtocolDocumentOperation::Clear();
  _clear_bit(1);
}
inline const ::protocol::ProtocolDocumentOperation& ProtocolWaveletOperation_MutateDocument::document_operation() const {
  return document_operation_ != NULL ? *document_operation_ : *default_instance_->document_operation_;
}
inline ::protocol::ProtocolDocumentOperation* ProtocolWaveletOperation_MutateDocument::mutable_document_operation() {
  _set_bit(1);
  if (document_operation_ == NULL) document_operation_ = new ::protocol::ProtocolDocumentOperation;
  return document_operation_;
}

// -------------------------------------------------------------------

// ProtocolWaveletOperation

// optional string add_participant = 1;
inline bool ProtocolWaveletOperation::has_add_participant() const {
  return _has_bit(0);
}
inline void ProtocolWaveletOperation::clear_add_participant() {
  if (add_participant_ != &_default_add_participant_) {
    add_participant_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolWaveletOperation::add_participant() const {
  return *add_participant_;
}
inline void ProtocolWaveletOperation::set_add_participant(const ::std::string& value) {
  _set_bit(0);
  if (add_participant_ == &_default_add_participant_) {
    add_participant_ = new ::std::string;
  }
  add_participant_->assign(value);
}
inline void ProtocolWaveletOperation::set_add_participant(const char* value) {
  _set_bit(0);
  if (add_participant_ == &_default_add_participant_) {
    add_participant_ = new ::std::string;
  }
  add_participant_->assign(value);
}
inline void ProtocolWaveletOperation::set_add_participant(const char* value, size_t size) {
  _set_bit(0);
  if (add_participant_ == &_default_add_participant_) {
    add_participant_ = new ::std::string;
  }
  add_participant_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolWaveletOperation::mutable_add_participant() {
  _set_bit(0);
  if (add_participant_ == &_default_add_participant_) {
    add_participant_ = new ::std::string;
  }
  return add_participant_;
}

// optional string remove_participant = 2;
inline bool ProtocolWaveletOperation::has_remove_participant() const {
  return _has_bit(1);
}
inline void ProtocolWaveletOperation::clear_remove_participant() {
  if (remove_participant_ != &_default_remove_participant_) {
    remove_participant_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolWaveletOperation::remove_participant() const {
  return *remove_participant_;
}
inline void ProtocolWaveletOperation::set_remove_participant(const ::std::string& value) {
  _set_bit(1);
  if (remove_participant_ == &_default_remove_participant_) {
    remove_participant_ = new ::std::string;
  }
  remove_participant_->assign(value);
}
inline void ProtocolWaveletOperation::set_remove_participant(const char* value) {
  _set_bit(1);
  if (remove_participant_ == &_default_remove_participant_) {
    remove_participant_ = new ::std::string;
  }
  remove_participant_->assign(value);
}
inline void ProtocolWaveletOperation::set_remove_participant(const char* value, size_t size) {
  _set_bit(1);
  if (remove_participant_ == &_default_remove_participant_) {
    remove_participant_ = new ::std::string;
  }
  remove_participant_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolWaveletOperation::mutable_remove_participant() {
  _set_bit(1);
  if (remove_participant_ == &_default_remove_participant_) {
    remove_participant_ = new ::std::string;
  }
  return remove_participant_;
}

// optional .protocol.ProtocolWaveletOperation.MutateDocument mutate_document = 3;
inline bool ProtocolWaveletOperation::has_mutate_document() const {
  return _has_bit(2);
}
inline void ProtocolWaveletOperation::clear_mutate_document() {
  if (mutate_document_ != NULL) mutate_document_->::protocol::ProtocolWaveletOperation_MutateDocument::Clear();
  _clear_bit(2);
}
inline const ::protocol::ProtocolWaveletOperation_MutateDocument& ProtocolWaveletOperation::mutate_document() const {
  return mutate_document_ != NULL ? *mutate_document_ : *default_instance_->mutate_document_;
}
inline ::protocol::ProtocolWaveletOperation_MutateDocument* ProtocolWaveletOperation::mutable_mutate_document() {
  _set_bit(2);
  if (mutate_document_ == NULL) mutate_document_ = new ::protocol::ProtocolWaveletOperation_MutateDocument;
  return mutate_document_;
}

// optional bool no_op = 4;
inline bool ProtocolWaveletOperation::has_no_op() const {
  return _has_bit(3);
}
inline void ProtocolWaveletOperation::clear_no_op() {
  no_op_ = false;
  _clear_bit(3);
}
inline bool ProtocolWaveletOperation::no_op() const {
  return no_op_;
}
inline void ProtocolWaveletOperation::set_no_op(bool value) {
  _set_bit(3);
  no_op_ = value;
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component_KeyValuePair

// required string key = 1;
inline bool ProtocolDocumentOperation_Component_KeyValuePair::has_key() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::clear_key() {
  if (key_ != &_default_key_) {
    key_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolDocumentOperation_Component_KeyValuePair::key() const {
  return *key_;
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::set_key(const ::std::string& value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::set_key(const char* value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::set_key(const char* value, size_t size) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_KeyValuePair::mutable_key() {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  return key_;
}

// required string value = 2;
inline bool ProtocolDocumentOperation_Component_KeyValuePair::has_value() const {
  return _has_bit(1);
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::clear_value() {
  if (value_ != &_default_value_) {
    value_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolDocumentOperation_Component_KeyValuePair::value() const {
  return *value_;
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::set_value(const ::std::string& value) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::set_value(const char* value) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValuePair::set_value(const char* value, size_t size) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_KeyValuePair::mutable_value() {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  return value_;
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component_KeyValueUpdate

// required string key = 1;
inline bool ProtocolDocumentOperation_Component_KeyValueUpdate::has_key() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::clear_key() {
  if (key_ != &_default_key_) {
    key_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolDocumentOperation_Component_KeyValueUpdate::key() const {
  return *key_;
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_key(const ::std::string& value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_key(const char* value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_key(const char* value, size_t size) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_KeyValueUpdate::mutable_key() {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  return key_;
}

// optional string old_value = 2;
inline bool ProtocolDocumentOperation_Component_KeyValueUpdate::has_old_value() const {
  return _has_bit(1);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::clear_old_value() {
  if (old_value_ != &_default_old_value_) {
    old_value_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolDocumentOperation_Component_KeyValueUpdate::old_value() const {
  return *old_value_;
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_old_value(const ::std::string& value) {
  _set_bit(1);
  if (old_value_ == &_default_old_value_) {
    old_value_ = new ::std::string;
  }
  old_value_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_old_value(const char* value) {
  _set_bit(1);
  if (old_value_ == &_default_old_value_) {
    old_value_ = new ::std::string;
  }
  old_value_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_old_value(const char* value, size_t size) {
  _set_bit(1);
  if (old_value_ == &_default_old_value_) {
    old_value_ = new ::std::string;
  }
  old_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_KeyValueUpdate::mutable_old_value() {
  _set_bit(1);
  if (old_value_ == &_default_old_value_) {
    old_value_ = new ::std::string;
  }
  return old_value_;
}

// optional string new_value = 3;
inline bool ProtocolDocumentOperation_Component_KeyValueUpdate::has_new_value() const {
  return _has_bit(2);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::clear_new_value() {
  if (new_value_ != &_default_new_value_) {
    new_value_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& ProtocolDocumentOperation_Component_KeyValueUpdate::new_value() const {
  return *new_value_;
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_new_value(const ::std::string& value) {
  _set_bit(2);
  if (new_value_ == &_default_new_value_) {
    new_value_ = new ::std::string;
  }
  new_value_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_new_value(const char* value) {
  _set_bit(2);
  if (new_value_ == &_default_new_value_) {
    new_value_ = new ::std::string;
  }
  new_value_->assign(value);
}
inline void ProtocolDocumentOperation_Component_KeyValueUpdate::set_new_value(const char* value, size_t size) {
  _set_bit(2);
  if (new_value_ == &_default_new_value_) {
    new_value_ = new ::std::string;
  }
  new_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_KeyValueUpdate::mutable_new_value() {
  _set_bit(2);
  if (new_value_ == &_default_new_value_) {
    new_value_ = new ::std::string;
  }
  return new_value_;
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component_ElementStart

// required string type = 1;
inline bool ProtocolDocumentOperation_Component_ElementStart::has_type() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component_ElementStart::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolDocumentOperation_Component_ElementStart::type() const {
  return *type_;
}
inline void ProtocolDocumentOperation_Component_ElementStart::set_type(const ::std::string& value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void ProtocolDocumentOperation_Component_ElementStart::set_type(const char* value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void ProtocolDocumentOperation_Component_ElementStart::set_type(const char* value, size_t size) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_ElementStart::mutable_type() {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// repeated .protocol.ProtocolDocumentOperation.Component.KeyValuePair attribute = 2;
inline int ProtocolDocumentOperation_Component_ElementStart::attribute_size() const {
  return attribute_.size();
}
inline void ProtocolDocumentOperation_Component_ElementStart::clear_attribute() {
  attribute_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >&
ProtocolDocumentOperation_Component_ElementStart::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >*
ProtocolDocumentOperation_Component_ElementStart::mutable_attribute() {
  return &attribute_;
}
inline const ::protocol::ProtocolDocumentOperation_Component_KeyValuePair& ProtocolDocumentOperation_Component_ElementStart::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* ProtocolDocumentOperation_Component_ElementStart::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* ProtocolDocumentOperation_Component_ElementStart::add_attribute() {
  return attribute_.Add();
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component_ReplaceAttributes

// optional bool empty = 1;
inline bool ProtocolDocumentOperation_Component_ReplaceAttributes::has_empty() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component_ReplaceAttributes::clear_empty() {
  empty_ = false;
  _clear_bit(0);
}
inline bool ProtocolDocumentOperation_Component_ReplaceAttributes::empty() const {
  return empty_;
}
inline void ProtocolDocumentOperation_Component_ReplaceAttributes::set_empty(bool value) {
  _set_bit(0);
  empty_ = value;
}

// repeated .protocol.ProtocolDocumentOperation.Component.KeyValuePair old_attribute = 2;
inline int ProtocolDocumentOperation_Component_ReplaceAttributes::old_attribute_size() const {
  return old_attribute_.size();
}
inline void ProtocolDocumentOperation_Component_ReplaceAttributes::clear_old_attribute() {
  old_attribute_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >&
ProtocolDocumentOperation_Component_ReplaceAttributes::old_attribute() const {
  return old_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >*
ProtocolDocumentOperation_Component_ReplaceAttributes::mutable_old_attribute() {
  return &old_attribute_;
}
inline const ::protocol::ProtocolDocumentOperation_Component_KeyValuePair& ProtocolDocumentOperation_Component_ReplaceAttributes::old_attribute(int index) const {
  return old_attribute_.Get(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* ProtocolDocumentOperation_Component_ReplaceAttributes::mutable_old_attribute(int index) {
  return old_attribute_.Mutable(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* ProtocolDocumentOperation_Component_ReplaceAttributes::add_old_attribute() {
  return old_attribute_.Add();
}

// repeated .protocol.ProtocolDocumentOperation.Component.KeyValuePair new_attribute = 3;
inline int ProtocolDocumentOperation_Component_ReplaceAttributes::new_attribute_size() const {
  return new_attribute_.size();
}
inline void ProtocolDocumentOperation_Component_ReplaceAttributes::clear_new_attribute() {
  new_attribute_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >&
ProtocolDocumentOperation_Component_ReplaceAttributes::new_attribute() const {
  return new_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValuePair >*
ProtocolDocumentOperation_Component_ReplaceAttributes::mutable_new_attribute() {
  return &new_attribute_;
}
inline const ::protocol::ProtocolDocumentOperation_Component_KeyValuePair& ProtocolDocumentOperation_Component_ReplaceAttributes::new_attribute(int index) const {
  return new_attribute_.Get(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* ProtocolDocumentOperation_Component_ReplaceAttributes::mutable_new_attribute(int index) {
  return new_attribute_.Mutable(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValuePair* ProtocolDocumentOperation_Component_ReplaceAttributes::add_new_attribute() {
  return new_attribute_.Add();
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component_UpdateAttributes

// optional bool empty = 1;
inline bool ProtocolDocumentOperation_Component_UpdateAttributes::has_empty() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component_UpdateAttributes::clear_empty() {
  empty_ = false;
  _clear_bit(0);
}
inline bool ProtocolDocumentOperation_Component_UpdateAttributes::empty() const {
  return empty_;
}
inline void ProtocolDocumentOperation_Component_UpdateAttributes::set_empty(bool value) {
  _set_bit(0);
  empty_ = value;
}

// repeated .protocol.ProtocolDocumentOperation.Component.KeyValueUpdate attribute_update = 2;
inline int ProtocolDocumentOperation_Component_UpdateAttributes::attribute_update_size() const {
  return attribute_update_.size();
}
inline void ProtocolDocumentOperation_Component_UpdateAttributes::clear_attribute_update() {
  attribute_update_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >&
ProtocolDocumentOperation_Component_UpdateAttributes::attribute_update() const {
  return attribute_update_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >*
ProtocolDocumentOperation_Component_UpdateAttributes::mutable_attribute_update() {
  return &attribute_update_;
}
inline const ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate& ProtocolDocumentOperation_Component_UpdateAttributes::attribute_update(int index) const {
  return attribute_update_.Get(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* ProtocolDocumentOperation_Component_UpdateAttributes::mutable_attribute_update(int index) {
  return attribute_update_.Mutable(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* ProtocolDocumentOperation_Component_UpdateAttributes::add_attribute_update() {
  return attribute_update_.Add();
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component_AnnotationBoundary

// optional bool empty = 1;
inline bool ProtocolDocumentOperation_Component_AnnotationBoundary::has_empty() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::clear_empty() {
  empty_ = false;
  _clear_bit(0);
}
inline bool ProtocolDocumentOperation_Component_AnnotationBoundary::empty() const {
  return empty_;
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::set_empty(bool value) {
  _set_bit(0);
  empty_ = value;
}

// repeated string end = 2;
inline int ProtocolDocumentOperation_Component_AnnotationBoundary::end_size() const {
  return end_.size();
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::clear_end() {
  end_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtocolDocumentOperation_Component_AnnotationBoundary::end() const {
  return end_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtocolDocumentOperation_Component_AnnotationBoundary::mutable_end() {
  return &end_;
}
inline const ::std::string& ProtocolDocumentOperation_Component_AnnotationBoundary::end(int index) const {
  return end_.Get(index);
}
inline ::std::string* ProtocolDocumentOperation_Component_AnnotationBoundary::mutable_end(int index) {
  return end_.Mutable(index);
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::set_end(int index, const ::std::string& value) {
  end_.Mutable(index)->assign(value);
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::set_end(int index, const char* value) {
  end_.Mutable(index)->assign(value);
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::set_end(int index, const char* value, size_t size) {
  end_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component_AnnotationBoundary::add_end() {
  return end_.Add();
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::add_end(const ::std::string& value) {
  end_.Add()->assign(value);
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::add_end(const char* value) {
  end_.Add()->assign(value);
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::add_end(const char* value, size_t size) {
  end_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated .protocol.ProtocolDocumentOperation.Component.KeyValueUpdate change = 3;
inline int ProtocolDocumentOperation_Component_AnnotationBoundary::change_size() const {
  return change_.size();
}
inline void ProtocolDocumentOperation_Component_AnnotationBoundary::clear_change() {
  change_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >&
ProtocolDocumentOperation_Component_AnnotationBoundary::change() const {
  return change_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate >*
ProtocolDocumentOperation_Component_AnnotationBoundary::mutable_change() {
  return &change_;
}
inline const ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate& ProtocolDocumentOperation_Component_AnnotationBoundary::change(int index) const {
  return change_.Get(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* ProtocolDocumentOperation_Component_AnnotationBoundary::mutable_change(int index) {
  return change_.Mutable(index);
}
inline ::protocol::ProtocolDocumentOperation_Component_KeyValueUpdate* ProtocolDocumentOperation_Component_AnnotationBoundary::add_change() {
  return change_.Add();
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation_Component

// optional .protocol.ProtocolDocumentOperation.Component.AnnotationBoundary annotation_boundary = 1;
inline bool ProtocolDocumentOperation_Component::has_annotation_boundary() const {
  return _has_bit(0);
}
inline void ProtocolDocumentOperation_Component::clear_annotation_boundary() {
  if (annotation_boundary_ != NULL) annotation_boundary_->::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary::Clear();
  _clear_bit(0);
}
inline const ::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary& ProtocolDocumentOperation_Component::annotation_boundary() const {
  return annotation_boundary_ != NULL ? *annotation_boundary_ : *default_instance_->annotation_boundary_;
}
inline ::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary* ProtocolDocumentOperation_Component::mutable_annotation_boundary() {
  _set_bit(0);
  if (annotation_boundary_ == NULL) annotation_boundary_ = new ::protocol::ProtocolDocumentOperation_Component_AnnotationBoundary;
  return annotation_boundary_;
}

// optional string characters = 2;
inline bool ProtocolDocumentOperation_Component::has_characters() const {
  return _has_bit(1);
}
inline void ProtocolDocumentOperation_Component::clear_characters() {
  if (characters_ != &_default_characters_) {
    characters_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolDocumentOperation_Component::characters() const {
  return *characters_;
}
inline void ProtocolDocumentOperation_Component::set_characters(const ::std::string& value) {
  _set_bit(1);
  if (characters_ == &_default_characters_) {
    characters_ = new ::std::string;
  }
  characters_->assign(value);
}
inline void ProtocolDocumentOperation_Component::set_characters(const char* value) {
  _set_bit(1);
  if (characters_ == &_default_characters_) {
    characters_ = new ::std::string;
  }
  characters_->assign(value);
}
inline void ProtocolDocumentOperation_Component::set_characters(const char* value, size_t size) {
  _set_bit(1);
  if (characters_ == &_default_characters_) {
    characters_ = new ::std::string;
  }
  characters_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component::mutable_characters() {
  _set_bit(1);
  if (characters_ == &_default_characters_) {
    characters_ = new ::std::string;
  }
  return characters_;
}

// optional .protocol.ProtocolDocumentOperation.Component.ElementStart element_start = 3;
inline bool ProtocolDocumentOperation_Component::has_element_start() const {
  return _has_bit(2);
}
inline void ProtocolDocumentOperation_Component::clear_element_start() {
  if (element_start_ != NULL) element_start_->::protocol::ProtocolDocumentOperation_Component_ElementStart::Clear();
  _clear_bit(2);
}
inline const ::protocol::ProtocolDocumentOperation_Component_ElementStart& ProtocolDocumentOperation_Component::element_start() const {
  return element_start_ != NULL ? *element_start_ : *default_instance_->element_start_;
}
inline ::protocol::ProtocolDocumentOperation_Component_ElementStart* ProtocolDocumentOperation_Component::mutable_element_start() {
  _set_bit(2);
  if (element_start_ == NULL) element_start_ = new ::protocol::ProtocolDocumentOperation_Component_ElementStart;
  return element_start_;
}

// optional bool element_end = 4;
inline bool ProtocolDocumentOperation_Component::has_element_end() const {
  return _has_bit(3);
}
inline void ProtocolDocumentOperation_Component::clear_element_end() {
  element_end_ = false;
  _clear_bit(3);
}
inline bool ProtocolDocumentOperation_Component::element_end() const {
  return element_end_;
}
inline void ProtocolDocumentOperation_Component::set_element_end(bool value) {
  _set_bit(3);
  element_end_ = value;
}

// optional int32 retain_item_count = 5;
inline bool ProtocolDocumentOperation_Component::has_retain_item_count() const {
  return _has_bit(4);
}
inline void ProtocolDocumentOperation_Component::clear_retain_item_count() {
  retain_item_count_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 ProtocolDocumentOperation_Component::retain_item_count() const {
  return retain_item_count_;
}
inline void ProtocolDocumentOperation_Component::set_retain_item_count(::google::protobuf::int32 value) {
  _set_bit(4);
  retain_item_count_ = value;
}

// optional string delete_characters = 6;
inline bool ProtocolDocumentOperation_Component::has_delete_characters() const {
  return _has_bit(5);
}
inline void ProtocolDocumentOperation_Component::clear_delete_characters() {
  if (delete_characters_ != &_default_delete_characters_) {
    delete_characters_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& ProtocolDocumentOperation_Component::delete_characters() const {
  return *delete_characters_;
}
inline void ProtocolDocumentOperation_Component::set_delete_characters(const ::std::string& value) {
  _set_bit(5);
  if (delete_characters_ == &_default_delete_characters_) {
    delete_characters_ = new ::std::string;
  }
  delete_characters_->assign(value);
}
inline void ProtocolDocumentOperation_Component::set_delete_characters(const char* value) {
  _set_bit(5);
  if (delete_characters_ == &_default_delete_characters_) {
    delete_characters_ = new ::std::string;
  }
  delete_characters_->assign(value);
}
inline void ProtocolDocumentOperation_Component::set_delete_characters(const char* value, size_t size) {
  _set_bit(5);
  if (delete_characters_ == &_default_delete_characters_) {
    delete_characters_ = new ::std::string;
  }
  delete_characters_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolDocumentOperation_Component::mutable_delete_characters() {
  _set_bit(5);
  if (delete_characters_ == &_default_delete_characters_) {
    delete_characters_ = new ::std::string;
  }
  return delete_characters_;
}

// optional .protocol.ProtocolDocumentOperation.Component.ElementStart delete_element_start = 7;
inline bool ProtocolDocumentOperation_Component::has_delete_element_start() const {
  return _has_bit(6);
}
inline void ProtocolDocumentOperation_Component::clear_delete_element_start() {
  if (delete_element_start_ != NULL) delete_element_start_->::protocol::ProtocolDocumentOperation_Component_ElementStart::Clear();
  _clear_bit(6);
}
inline const ::protocol::ProtocolDocumentOperation_Component_ElementStart& ProtocolDocumentOperation_Component::delete_element_start() const {
  return delete_element_start_ != NULL ? *delete_element_start_ : *default_instance_->delete_element_start_;
}
inline ::protocol::ProtocolDocumentOperation_Component_ElementStart* ProtocolDocumentOperation_Component::mutable_delete_element_start() {
  _set_bit(6);
  if (delete_element_start_ == NULL) delete_element_start_ = new ::protocol::ProtocolDocumentOperation_Component_ElementStart;
  return delete_element_start_;
}

// optional bool delete_element_end = 8;
inline bool ProtocolDocumentOperation_Component::has_delete_element_end() const {
  return _has_bit(7);
}
inline void ProtocolDocumentOperation_Component::clear_delete_element_end() {
  delete_element_end_ = false;
  _clear_bit(7);
}
inline bool ProtocolDocumentOperation_Component::delete_element_end() const {
  return delete_element_end_;
}
inline void ProtocolDocumentOperation_Component::set_delete_element_end(bool value) {
  _set_bit(7);
  delete_element_end_ = value;
}

// optional .protocol.ProtocolDocumentOperation.Component.ReplaceAttributes replace_attributes = 9;
inline bool ProtocolDocumentOperation_Component::has_replace_attributes() const {
  return _has_bit(8);
}
inline void ProtocolDocumentOperation_Component::clear_replace_attributes() {
  if (replace_attributes_ != NULL) replace_attributes_->::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes::Clear();
  _clear_bit(8);
}
inline const ::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes& ProtocolDocumentOperation_Component::replace_attributes() const {
  return replace_attributes_ != NULL ? *replace_attributes_ : *default_instance_->replace_attributes_;
}
inline ::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes* ProtocolDocumentOperation_Component::mutable_replace_attributes() {
  _set_bit(8);
  if (replace_attributes_ == NULL) replace_attributes_ = new ::protocol::ProtocolDocumentOperation_Component_ReplaceAttributes;
  return replace_attributes_;
}

// optional .protocol.ProtocolDocumentOperation.Component.UpdateAttributes update_attributes = 10;
inline bool ProtocolDocumentOperation_Component::has_update_attributes() const {
  return _has_bit(9);
}
inline void ProtocolDocumentOperation_Component::clear_update_attributes() {
  if (update_attributes_ != NULL) update_attributes_->::protocol::ProtocolDocumentOperation_Component_UpdateAttributes::Clear();
  _clear_bit(9);
}
inline const ::protocol::ProtocolDocumentOperation_Component_UpdateAttributes& ProtocolDocumentOperation_Component::update_attributes() const {
  return update_attributes_ != NULL ? *update_attributes_ : *default_instance_->update_attributes_;
}
inline ::protocol::ProtocolDocumentOperation_Component_UpdateAttributes* ProtocolDocumentOperation_Component::mutable_update_attributes() {
  _set_bit(9);
  if (update_attributes_ == NULL) update_attributes_ = new ::protocol::ProtocolDocumentOperation_Component_UpdateAttributes;
  return update_attributes_;
}

// -------------------------------------------------------------------

// ProtocolDocumentOperation

// repeated .protocol.ProtocolDocumentOperation.Component component = 1;
inline int ProtocolDocumentOperation::component_size() const {
  return component_.size();
}
inline void ProtocolDocumentOperation::clear_component() {
  component_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component >&
ProtocolDocumentOperation::component() const {
  return component_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolDocumentOperation_Component >*
ProtocolDocumentOperation::mutable_component() {
  return &component_;
}
inline const ::protocol::ProtocolDocumentOperation_Component& ProtocolDocumentOperation::component(int index) const {
  return component_.Get(index);
}
inline ::protocol::ProtocolDocumentOperation_Component* ProtocolDocumentOperation::mutable_component(int index) {
  return component_.Mutable(index);
}
inline ::protocol::ProtocolDocumentOperation_Component* ProtocolDocumentOperation::add_component() {
  return component_.Add();
}

// -------------------------------------------------------------------

// ProtocolAppliedWaveletDelta

// required .protocol.ProtocolSignedDelta signed_original_delta = 1;
inline bool ProtocolAppliedWaveletDelta::has_signed_original_delta() const {
  return _has_bit(0);
}
inline void ProtocolAppliedWaveletDelta::clear_signed_original_delta() {
  if (signed_original_delta_ != NULL) signed_original_delta_->::protocol::ProtocolSignedDelta::Clear();
  _clear_bit(0);
}
inline const ::protocol::ProtocolSignedDelta& ProtocolAppliedWaveletDelta::signed_original_delta() const {
  return signed_original_delta_ != NULL ? *signed_original_delta_ : *default_instance_->signed_original_delta_;
}
inline ::protocol::ProtocolSignedDelta* ProtocolAppliedWaveletDelta::mutable_signed_original_delta() {
  _set_bit(0);
  if (signed_original_delta_ == NULL) signed_original_delta_ = new ::protocol::ProtocolSignedDelta;
  return signed_original_delta_;
}

// optional .protocol.ProtocolHashedVersion hashed_version_applied_at = 2;
inline bool ProtocolAppliedWaveletDelta::has_hashed_version_applied_at() const {
  return _has_bit(1);
}
inline void ProtocolAppliedWaveletDelta::clear_hashed_version_applied_at() {
  if (hashed_version_applied_at_ != NULL) hashed_version_applied_at_->::protocol::ProtocolHashedVersion::Clear();
  _clear_bit(1);
}
inline const ::protocol::ProtocolHashedVersion& ProtocolAppliedWaveletDelta::hashed_version_applied_at() const {
  return hashed_version_applied_at_ != NULL ? *hashed_version_applied_at_ : *default_instance_->hashed_version_applied_at_;
}
inline ::protocol::ProtocolHashedVersion* ProtocolAppliedWaveletDelta::mutable_hashed_version_applied_at() {
  _set_bit(1);
  if (hashed_version_applied_at_ == NULL) hashed_version_applied_at_ = new ::protocol::ProtocolHashedVersion;
  return hashed_version_applied_at_;
}

// required int32 operations_applied = 3;
inline bool ProtocolAppliedWaveletDelta::has_operations_applied() const {
  return _has_bit(2);
}
inline void ProtocolAppliedWaveletDelta::clear_operations_applied() {
  operations_applied_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ProtocolAppliedWaveletDelta::operations_applied() const {
  return operations_applied_;
}
inline void ProtocolAppliedWaveletDelta::set_operations_applied(::google::protobuf::int32 value) {
  _set_bit(2);
  operations_applied_ = value;
}

// required int64 application_timestamp = 4;
inline bool ProtocolAppliedWaveletDelta::has_application_timestamp() const {
  return _has_bit(3);
}
inline void ProtocolAppliedWaveletDelta::clear_application_timestamp() {
  application_timestamp_ = GOOGLE_LONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::int64 ProtocolAppliedWaveletDelta::application_timestamp() const {
  return application_timestamp_;
}
inline void ProtocolAppliedWaveletDelta::set_application_timestamp(::google::protobuf::int64 value) {
  _set_bit(3);
  application_timestamp_ = value;
}

// -------------------------------------------------------------------

// ProtocolSignedDelta

// required bytes delta = 1;
inline bool ProtocolSignedDelta::has_delta() const {
  return _has_bit(0);
}
inline void ProtocolSignedDelta::clear_delta() {
  if (delta_ != &_default_delta_) {
    delta_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolSignedDelta::delta() const {
  return *delta_;
}
inline void ProtocolSignedDelta::set_delta(const ::std::string& value) {
  _set_bit(0);
  if (delta_ == &_default_delta_) {
    delta_ = new ::std::string;
  }
  delta_->assign(value);
}
inline void ProtocolSignedDelta::set_delta(const char* value) {
  _set_bit(0);
  if (delta_ == &_default_delta_) {
    delta_ = new ::std::string;
  }
  delta_->assign(value);
}
inline void ProtocolSignedDelta::set_delta(const void* value, size_t size) {
  _set_bit(0);
  if (delta_ == &_default_delta_) {
    delta_ = new ::std::string;
  }
  delta_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolSignedDelta::mutable_delta() {
  _set_bit(0);
  if (delta_ == &_default_delta_) {
    delta_ = new ::std::string;
  }
  return delta_;
}

// repeated .protocol.ProtocolSignature signature = 2;
inline int ProtocolSignedDelta::signature_size() const {
  return signature_.size();
}
inline void ProtocolSignedDelta::clear_signature() {
  signature_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolSignature >&
ProtocolSignedDelta::signature() const {
  return signature_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::ProtocolSignature >*
ProtocolSignedDelta::mutable_signature() {
  return &signature_;
}
inline const ::protocol::ProtocolSignature& ProtocolSignedDelta::signature(int index) const {
  return signature_.Get(index);
}
inline ::protocol::ProtocolSignature* ProtocolSignedDelta::mutable_signature(int index) {
  return signature_.Mutable(index);
}
inline ::protocol::ProtocolSignature* ProtocolSignedDelta::add_signature() {
  return signature_.Add();
}

// -------------------------------------------------------------------

// ProtocolSignature

// required bytes signature_bytes = 1;
inline bool ProtocolSignature::has_signature_bytes() const {
  return _has_bit(0);
}
inline void ProtocolSignature::clear_signature_bytes() {
  if (signature_bytes_ != &_default_signature_bytes_) {
    signature_bytes_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProtocolSignature::signature_bytes() const {
  return *signature_bytes_;
}
inline void ProtocolSignature::set_signature_bytes(const ::std::string& value) {
  _set_bit(0);
  if (signature_bytes_ == &_default_signature_bytes_) {
    signature_bytes_ = new ::std::string;
  }
  signature_bytes_->assign(value);
}
inline void ProtocolSignature::set_signature_bytes(const char* value) {
  _set_bit(0);
  if (signature_bytes_ == &_default_signature_bytes_) {
    signature_bytes_ = new ::std::string;
  }
  signature_bytes_->assign(value);
}
inline void ProtocolSignature::set_signature_bytes(const void* value, size_t size) {
  _set_bit(0);
  if (signature_bytes_ == &_default_signature_bytes_) {
    signature_bytes_ = new ::std::string;
  }
  signature_bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolSignature::mutable_signature_bytes() {
  _set_bit(0);
  if (signature_bytes_ == &_default_signature_bytes_) {
    signature_bytes_ = new ::std::string;
  }
  return signature_bytes_;
}

// required bytes signer_id = 2;
inline bool ProtocolSignature::has_signer_id() const {
  return _has_bit(1);
}
inline void ProtocolSignature::clear_signer_id() {
  if (signer_id_ != &_default_signer_id_) {
    signer_id_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolSignature::signer_id() const {
  return *signer_id_;
}
inline void ProtocolSignature::set_signer_id(const ::std::string& value) {
  _set_bit(1);
  if (signer_id_ == &_default_signer_id_) {
    signer_id_ = new ::std::string;
  }
  signer_id_->assign(value);
}
inline void ProtocolSignature::set_signer_id(const char* value) {
  _set_bit(1);
  if (signer_id_ == &_default_signer_id_) {
    signer_id_ = new ::std::string;
  }
  signer_id_->assign(value);
}
inline void ProtocolSignature::set_signer_id(const void* value, size_t size) {
  _set_bit(1);
  if (signer_id_ == &_default_signer_id_) {
    signer_id_ = new ::std::string;
  }
  signer_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolSignature::mutable_signer_id() {
  _set_bit(1);
  if (signer_id_ == &_default_signer_id_) {
    signer_id_ = new ::std::string;
  }
  return signer_id_;
}

// required .protocol.ProtocolSignature.SignatureAlgorithm signature_algorithm = 3;
inline bool ProtocolSignature::has_signature_algorithm() const {
  return _has_bit(2);
}
inline void ProtocolSignature::clear_signature_algorithm() {
  signature_algorithm_ = 1;
  _clear_bit(2);
}
inline ::protocol::ProtocolSignature_SignatureAlgorithm ProtocolSignature::signature_algorithm() const {
  return static_cast< ::protocol::ProtocolSignature_SignatureAlgorithm >(signature_algorithm_);
}
inline void ProtocolSignature::set_signature_algorithm(::protocol::ProtocolSignature_SignatureAlgorithm value) {
  GOOGLE_DCHECK(::protocol::ProtocolSignature_SignatureAlgorithm_IsValid(value));
  _set_bit(2);
  signature_algorithm_ = value;
}

// -------------------------------------------------------------------

// ProtocolSignerInfo

// required .protocol.ProtocolSignerInfo.HashAlgorithm hash_algorithm = 1;
inline bool ProtocolSignerInfo::has_hash_algorithm() const {
  return _has_bit(0);
}
inline void ProtocolSignerInfo::clear_hash_algorithm() {
  hash_algorithm_ = 1;
  _clear_bit(0);
}
inline ::protocol::ProtocolSignerInfo_HashAlgorithm ProtocolSignerInfo::hash_algorithm() const {
  return static_cast< ::protocol::ProtocolSignerInfo_HashAlgorithm >(hash_algorithm_);
}
inline void ProtocolSignerInfo::set_hash_algorithm(::protocol::ProtocolSignerInfo_HashAlgorithm value) {
  GOOGLE_DCHECK(::protocol::ProtocolSignerInfo_HashAlgorithm_IsValid(value));
  _set_bit(0);
  hash_algorithm_ = value;
}

// required string domain = 2;
inline bool ProtocolSignerInfo::has_domain() const {
  return _has_bit(1);
}
inline void ProtocolSignerInfo::clear_domain() {
  if (domain_ != &_default_domain_) {
    domain_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProtocolSignerInfo::domain() const {
  return *domain_;
}
inline void ProtocolSignerInfo::set_domain(const ::std::string& value) {
  _set_bit(1);
  if (domain_ == &_default_domain_) {
    domain_ = new ::std::string;
  }
  domain_->assign(value);
}
inline void ProtocolSignerInfo::set_domain(const char* value) {
  _set_bit(1);
  if (domain_ == &_default_domain_) {
    domain_ = new ::std::string;
  }
  domain_->assign(value);
}
inline void ProtocolSignerInfo::set_domain(const char* value, size_t size) {
  _set_bit(1);
  if (domain_ == &_default_domain_) {
    domain_ = new ::std::string;
  }
  domain_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolSignerInfo::mutable_domain() {
  _set_bit(1);
  if (domain_ == &_default_domain_) {
    domain_ = new ::std::string;
  }
  return domain_;
}

// repeated bytes certificate = 3;
inline int ProtocolSignerInfo::certificate_size() const {
  return certificate_.size();
}
inline void ProtocolSignerInfo::clear_certificate() {
  certificate_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtocolSignerInfo::certificate() const {
  return certificate_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtocolSignerInfo::mutable_certificate() {
  return &certificate_;
}
inline const ::std::string& ProtocolSignerInfo::certificate(int index) const {
  return certificate_.Get(index);
}
inline ::std::string* ProtocolSignerInfo::mutable_certificate(int index) {
  return certificate_.Mutable(index);
}
inline void ProtocolSignerInfo::set_certificate(int index, const ::std::string& value) {
  certificate_.Mutable(index)->assign(value);
}
inline void ProtocolSignerInfo::set_certificate(int index, const char* value) {
  certificate_.Mutable(index)->assign(value);
}
inline void ProtocolSignerInfo::set_certificate(int index, const void* value, size_t size) {
  certificate_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolSignerInfo::add_certificate() {
  return certificate_.Add();
}
inline void ProtocolSignerInfo::add_certificate(const ::std::string& value) {
  certificate_.Add()->assign(value);
}
inline void ProtocolSignerInfo::add_certificate(const char* value) {
  certificate_.Add()->assign(value);
}
inline void ProtocolSignerInfo::add_certificate(const void* value, size_t size) {
  certificate_.Add()->assign(reinterpret_cast<const char*>(value), size);
}


}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::ProtocolSignature_SignatureAlgorithm>() {
  return ::protocol::ProtocolSignature_SignatureAlgorithm_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::ProtocolSignerInfo_HashAlgorithm>() {
  return ::protocol::ProtocolSignerInfo_HashAlgorithm_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_common_2eproto__INCLUDED
